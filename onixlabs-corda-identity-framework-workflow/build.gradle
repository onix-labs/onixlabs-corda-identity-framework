cordapp {
    targetPlatformVersion cordapp_platform_version
    minimumPlatformVersion cordapp_platform_version
    workflow {
        name cordapp_workflow_name
        vendor cordapp_vendor_name
        licence cordapp_license
        versionId cordapp_version_id
    }
    signing {
        enabled = cordapp_signing_enabled
        options {
            keystore cordapp_signing_keystore
            alias cordapp_signing_alias
            storepass cordapp_signing_password
            keypass cordapp_signing_password
            storetype cordapp_signing_storetype
        }
    }
}

dependencies {
    // Kotlin Dependencies
    implementation "$kotlin_group:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda Development Dependencies
    cordaCompile "$corda_group:corda-core:$corda_release_version"

    // CorDapp Dependencies
    cordapp "$onixlabs_group:onixlabs-corda-core-workflow:$onixlabs_corda_core_release_version"
    cordapp project(":onixlabs-corda-identity-framework-contract")

    // Test Dependencies
    testRuntimeOnly "$junit_group:junit-jupiter-engine:$junit_version"
    testImplementation "$junit_group:junit-jupiter-api:$junit_version"
    testImplementation "$kotlin_group:kotlin-test:$kotlin_version"
    testImplementation "$corda_group:corda-node-driver:$corda_release_version"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/onix-labs/onixlabs-corda-identity-framework")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GHA_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GHA_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = project.parent.group
            version = project.parent.version
            artifactId = 'onixlabs-corda-identity-framework-workflow'
            artifact sourceJar
            from components.java
        }
    }
}